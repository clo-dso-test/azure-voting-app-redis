name: build_deploy_aks

on:
  push:
    paths:
      - "azure-vote/**"
      - "azure-vote/azure-vote/**"
      - ".github/workflows/**"

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      BUILD_PATH: "azure-vote/"
      IMAGE_NAME: "azure-vote-front"
      REGISTRY: "${{ secrets.registry }}.azurecr.io"
      POLICY: "Default secrets policy"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # Azure 로그인
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ACR 로그인
      - name: Login to ACR
        run: az acr login --name ${{ secrets.registry }}

      # Docker 이미지 빌드
      - name: Build Docker image
        run: |
          cd $BUILD_PATH
          docker build . -t $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker tag $REGISTRY/$IMAGE_NAME:${{ github.sha }} $REGISTRY/$IMAGE_NAME:latest

      # Docker 이미지 ACR에 푸시
      - name: Push Docker image to ACR
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker push $REGISTRY/$IMAGE_NAME:latest

      # Wiz CLI 보안 검사
      - name: Download Wiz CLI
        run: curl -o wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64 && chmod +x wizcli

      - name: Authenticate to Wiz
        run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

      - name: Run wiz-cli docker image scan
        run: ./wizcli docker scan --image "$REGISTRY/$IMAGE_NAME:${{ github.sha }}" --policy "$POLICY"

      - name: Fetch digest of Docker image for Graph enrichment
        run: ./wizcli docker tag --image "$REGISTRY/$IMAGE_NAME:${{ github.sha }}"

      # AKS 배포
      - name: kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.24'

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'
          admin: 'false'
          use-kubelogin: 'true'

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
            azure-vote-all-in-one-redis.yaml
          images:  '${{ secrets.registry }}.azurecr.io/azure-vote-front:${{ github.sha }}'
          pull-images: false
